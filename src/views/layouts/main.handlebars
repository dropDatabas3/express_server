<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Meta y enlaces de estilos -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{title}}</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" 
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" 
    />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { min-height: 100vh; display: flex; flex-direction: column; }
      nav { background-color: #FD9843; }
      .navbar-brand { font-size: 1.5rem; font-weight: bold; }
      .nav-link { font-size: 1.1rem; }
      .footer { background-color: #343a40; color: white; }
      .footer a { color: #FD9843; }
      .modal-backdrop { background: rgba(0, 0, 0, 0.5); }
      .login-modal-content, .register-modal-content {
        border-radius: 0.75rem;
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
      }
      .login-form, .register-form {
        background: #fff;
        padding: 2rem;
        border-radius: 0.75rem;
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
      }
      .modal-header {
        background-color: #FD9843;
        color: white;
        border-top-left-radius: 0.75rem;
        border-top-right-radius: 0.75rem;
        text-align: center;
        justify-content: center;
        position: relative;
      }
      .btn-close {
        color: white;
        font-weight: bold;
        position: absolute;
        right: 1rem;
        top: 1rem;
      }
      .modal-footer { justify-content: center; }
      #btn-login, #btn-register {
        background-color: #FD9843 !important;
        border-color: #FD9843 !important;
      }
      .loading-spinner { display: none; }
      #loading-register-span { display: none; justify-content: center; }
      .user-dropdown {
        position: relative;
        display: inline-block;
        min-width: 90px;
        margin-left: 10px;
      }
      .user-dropdown-content {
        display: none;
        position: absolute;
        right: 0;
        background-color: white;
        min-width: 160px;
        box-shadow: 0 8px 16px rgba(0,0,0,0.2);
        z-index: 1;
        border-radius: 0.25rem;
        overflow: hidden;
      }
      .user-dropdown-content a {
        color: black;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
      }
      .user-dropdown-content a:hover {
        background-color: #f1f1f1;
      }
      .user-dropdown:hover .user-dropdown-content {
        display: block;
      }
      .user-dropdown-button {
        display: flex !important;
        align-items: center !important;
        color: white !important;
        padding: 8px 12px !important;
        border: none !important;
        border-radius: 1rem !important;
        background: #FD9843 !important;
        box-shadow: 2px 2px 9px #be7232, -2px -2px 5px #ffbe54 !important;
        transition: background 0.3s, box-shadow 0.3s !important;
      }
      .user-dropdown-button:hover {
        background: #fea862 !important;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2) !important;
        cursor: pointer !important;
      }
      .user-dropdown-button img {
        margin-right: 8px !important;
        border-radius: 50% !important;
        height: 30px !important;
        width: 30px !important;
        object-fit: cover !important;
        border: 2px solid white !important;
      }
      @media (max-width: 992px) {
        .user-dropdown {
          display: none;
        }
      }
      /* Sidebar */
      .cart-sidebar {
        position: fixed;
        right: -400px;
        top: 0;
        width: 400px;
        height: 100%;
        background-color: white;
        box-shadow: -2px 0 5px rgba(0, 0, 0, 0.5);
        transition: right 0.3s ease;
        z-index: 1000;
        overflow-y: auto;
      }
      .cart-sidebar.open {
        right: 0;
      }
      .cart-sidebar-header {
        background-color: #FD9843;
        color: white;
        padding: 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .cart-sidebar-header h2 {
        margin: 0;
      }
      .cart-sidebar-body {
        padding: 1rem;
      }
    </style>
  </head>
  <body class="d-flex flex-column">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="/">HOME</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNavAltMarkup"
          aria-controls="navbarNavAltMarkup"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
          <div class="navbar-nav ms-auto" id="navbarSection">

          </div>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <main class="flex-grow-1 container my-4">
      {{{body}}}
    </main>

    <!-- Footer -->
    <footer class="footer py-4 mt-auto">
      <div class="container text-center">
        &copy; 2024 Shop food | <a href="#">Privacy Policy</a> | <a href="#">Terms of Service</a>
      </div>
    </footer>

    <!-- Sidebar Cart -->
    <div class="cart-sidebar" id="cartSidebar">
      <div class="cart-sidebar-header">
        <h2>Carrito de compras</h2>
        <button type="button" class="btn-close text-white" aria-label="Close" onclick="toggleCartSidebar()"></button>
      </div>
      <div class="cart-sidebar-body" id="cartSidebarBody">
        <!-- Cart items will be loaded here -->
      </div>
      <div class="text-center p-2">
        <button type="button" class="btn btn-primary m-2">Finalizar compra</button>
        <button type="button" class="btn btn-danger m-2" onclick="destroyAllMainLayout()">Eliminar Todo</button>
      </div>
    </div>

    <!-- Login Modal -->
    <div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content login-modal-content">
          <div class="modal-header">
            <h3 class="modal-title mx-auto" id="loginModalLabel">Get Started</h3>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="loginForm" class="login-form mx-auto">
              <div class="form-group mb-4">
                <label for="email" class="block text-gray-700 font-bold mb-2">Email address</label>
                <input type="email" class="form-control px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" id="email" aria-describedby="emailHelp" placeholder="Enter email" required>
              </div>
              <div class="form-group mb-4">
                <label for="password" class="block text-gray-700 font-bold mb-2">Password</label>
                <input type="password" class="form-control px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" id="password" placeholder="Password" required>
              </div>
              <div id="loginError" class="text-danger mb-4" style="display: none;">
                <p id="loginErrorMessage"></p>
              </div>
              <button type="submit" class="btn btn-primary w-full py-2" id="btn-login">Login</button>
              <div class="register-link mt-4">
                <p>No estás registrado? <a href="#" id="switchToRegister" style="color: blue;">Regístrate aquí</a></p>
              </div>
              <div class="forgot-password mt-2">
                <p><a href="#" id="forgotPassword" style="color: blue;" onclick="changeToPasswordRecovery()">Olvidé mi contraseña</a></p>
              </div>
            </form>

            <!-- Forgot Password Form -->
            <form id="forgotPasswordForm" class="forgot-password-form mx-auto" style="display: none;">
              <div class="form-group mb-4">
                <label for="resetEmail" class="block text-gray-700 font-bold mb-2">Email address</label>
                <input type="email" class="form-control px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" id="resetEmail" placeholder="Enter email" required>
              </div>
              <div id="resetError" class="text-danger mb-4" style="display: none;">
                <p id="resetErrorMessage"></p>
              </div>
              <button class="btn btn-primary w-full py-2" id="btn-reset" onclick="sendPasswordRecoveryEmail()">Enviar</button>
            </form>

            <div id="resetMessage" class="text-success mb-4" style="display: none;">
              <p>Por favor verifica tu casilla de mensajes</p>
            </div>
          </div>
          <div class="modal-footer"></div>
        </div>
      </div>
    </div>

    <!-- Register Modal -->
    <div class="modal fade" id="registerModal" tabindex="-1" aria-labelledby="registerModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content register-modal-content">
          <div class="modal-header">
            <h3 class="modal-title mx-auto" id="registerModalLabel">Bienvenido</h3>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="registerForm" class="register-form mx-auto">
              <div class="form-group mb-4">
                <label for="registerEmail" class="block text-gray-700 font-bold mb-2">Email address *</label>
                <input type="email" class="form-control px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" id="registerEmail" aria-describedby="emailHelp" placeholder="Enter email" required>
              </div>
              <div class="form-group mb-4">
                <label for="registerRole" class="block text-gray-700 font-bold mb-2">Role</label>
                <select class="form-control px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" id="registerRole">
                  <option value="0">usuario</option>
                  <option value="1">administrador</option>
                </select>
              </div>
              <div class="form-group mb-4">
                <label for="registerName" class="block text-gray-700 font-bold mb-2">Name *</label>
                <input type="text" class="form-control px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" id="registerName" placeholder="Enter your name" required>
              </div>
              <div class="form-group mb-4">
                <label for="registerPhoto" class="block text-gray-700 font-bold mb-2">Photo</label>
                <input type="text" class="form-control px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" id="registerPhoto" placeholder="Enter your photo">
              </div>
              <div class="form-group mb-4">
                <label for="registerPassword" class="block text-gray-700 font-bold mb-2">Password *</label>
                <input type="password" class="form-control px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" id="registerPassword" placeholder="Password" required>
              </div>
              <div id="registerSuccess" class="text-success mb-4" style="display: none;">Hemos enviado un mensaje a su email, por favor confirme su correo electronico.</div>
              <button type="submit" class="btn btn-primary w-full py-2" id="btn-register">
                <span id="loading-register-span">
                  <div class="d-flex justify-content-center loading-spinner">
                    <div class="spinner-border text-light" role="status">
                      <span class="visually-hidden">Loading...</span>
                    </div>
                  </div>
                </span>
                <span id="register-span">Register</span>           
              </button>
              <div class="login-link mt-4">
                <p>¿Ya tienes cuenta? <a href="#" id="switchToLogin" style="color: blue;">Presiona aquí</a></p>
              </div>
            </form>
          </div>
          <div class="modal-footer"></div>
        </div>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
    <script>
      document.addEventListener('DOMContentLoaded', async () => {
        try {
          document.querySelector('.loading-spinner').style.display = 'none';
          let response = await fetch('/api/sessions/online');
          response = await response.json();

          console.log("consulta sessions, response: ", response);
          const navContainer = document.getElementById('navbarSection');

          if (response.statusCode === 200) {
            navContainer.innerHTML = `
              <a class="nav-link text-light" href="/products">Productos</a>
              <a class="nav-link text-light" href="/products/real">Real</a>
              <a class="nav-link text-light" href="/carts/paginate" id="cart-btn" onclick="handleCartButtonClick(event)">Cart</a>
              <div class="user-dropdown d-none d-lg-inline-block">
                <button class="user-dropdown-button nav-link text-light btn btn-link">
                  <img src="${response.response.photo}" alt="Avatar"> ${response.response.name}
                </button>
                <div class="user-dropdown-content">
                  <a href="/users">Profile</a>
                  <a href="#" onclick="logout()">Signout</a>
                </div>
              </div>
              <div class="d-lg-none">
                <a class="nav-link text-light" href="/users">Profile</a>
                <a class="nav-link text-light" href="#" onclick="logout()">Signout</a>
              </div>
            `;
          } else {
            navContainer.innerHTML = `
              <a class="nav-link text-light" href="/products">Productos</a>
              <a class="nav-link text-light" href="/products/real">Real</a>
              <a class="nav-link text-light" href="#" data-bs-toggle="modal" data-bs-target="#loginModal">Get Started</a>
            `;
          }
        } catch (error) {
          console.error("Error fetching session status: ", error);
        }
      });

async function changeToPasswordRecovery() {
  document.getElementById('loginForm').style.display = 'none';
  document.getElementById('forgotPasswordForm').style.display = 'block';
}

async function sendPasswordRecoveryEmail(){
  try {
  const email = document.getElementById('resetEmail').value;
        const option = {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({email})
        };
        let response = await fetch("/api/sessions/password", option);
        response = await response.json();
        console.log(response);
    if (response.statusCode === 201) {
      document.getElementById('forgotPasswordForm').style.display = 'none';
      document.getElementById('resetMessage').style.display = 'block';
    } else {
      const error = await response.json();
      document.getElementById('resetError').style.display = 'block';
      document.getElementById('resetErrorMessage').textContent = error.message;
    }
  } catch (error) {
    console.log(error);
    document.getElementById('resetError').style.display = 'block';
    document.getElementById('resetErrorMessage').textContent = 'An error occurred. Please try again.';
  }
}

document.getElementById('loginModal').addEventListener('hidden.bs.modal', () => {
  document.getElementById('loginForm').style.display = 'block';
  document.getElementById('forgotPasswordForm').style.display = 'none';
  document.getElementById('resetMessage').style.display = 'none';
  document.getElementById('resetError').style.display = 'none';
  document.getElementById('resetEmail').value = '';
});


      async function logout() {
        try {
          const options = {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
          };
          let response = await fetch('/api/sessions/logout', options);
          response = await response.json();

          if (response.statusCode === 200) {
            window.location.href = "/";
          }
        } catch (error) {
          alert("Error logging out: " + error);
          console.error("Error logging out: ", error);
        }
      }

      document.getElementById('switchToRegister').addEventListener('click', () => {
        var loginModal = bootstrap.Modal.getInstance(document.getElementById('loginModal'));
        loginModal.hide();
          document.querySelectorAll('#registerForm > div > label').forEach(label => label.style.display = 'block');
          document.querySelectorAll('#registerForm > div > input').forEach(input => input.style.display = 'block'); 
          document.querySelectorAll('#registerForm > div > input').forEach(input => input.value = '');
          document.querySelectorAll('#registerForm > div > select').forEach(select => select.style.display = 'block');
          document.querySelector('#btn-register').style.display = 'block';
          document.querySelector('.login-link').style.display = 'block';
          document.querySelector(' #register-span').style.display = 'block';
          document.querySelector('#btn-register').removeAttribute('disabled');

        var registerModal = new bootstrap.Modal(document.getElementById('registerModal'));
        registerModal.show();
      });

      document.getElementById('switchToLogin').addEventListener('click', () => {
        var registerModal = bootstrap.Modal.getInstance(document.getElementById('registerModal'));
        registerModal.hide();
        var loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
        loginModal.show();
      });

      document.querySelector('#loginForm').addEventListener("submit", async (event) => {
        event.preventDefault();
        document.getElementById('loginError').style.display = 'none';
        document.getElementById('loginErrorMessage').textContent = "";
        const data = {
          email: document.querySelector('#email').value,
          password: document.querySelector('#password').value
        };
        const option = {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data)
        };
        let response = await fetch("/api/sessions/login", option);
        response = await response.json();
        console.log(response);
        if (response.statusCode === 200) {
          location.replace("/");
        } else {
          document.getElementById('loginError').style.display = 'block';
          document.getElementById('loginErrorMessage').textContent = response.error;
        }
      });

      document.querySelector('#registerForm').addEventListener("submit", async (event) => {
        event.preventDefault();
        document.querySelector(' #loading-register-span').style.display = 'flex';
        document.querySelector(' #register-span').style.display = 'none';
        document.querySelector('#btn-register').setAttribute('disabled', true);
        const data = {
          email: document.querySelector('#registerEmail').value,
          role: document.querySelector('#registerRole').value,
          name: document.querySelector('#registerName').value,
          photo: document.querySelector('#registerPhoto').value,
          password: document.querySelector('#registerPassword').value
        };
        const options = {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        };
        let response = await fetch("/api/sessions/register", options);
        response = await response.json();
        document.querySelector('#loading-register-span').style.display = 'none';
        console.log(response);
        if (response.statusCode === 201) {
          document.querySelectorAll('#registerForm > div > label').forEach(label => label.style.display = 'none');
          document.querySelectorAll('#registerForm > div > input').forEach(input => input.style.display = 'none'); 
          document.querySelectorAll('#registerForm > div > select').forEach(select => select.style.display = 'none');
          document.getElementById('registerSuccess').style.display = 'block';
          document.querySelector('#btn-register').style.display = 'none';
          document.querySelector('.login-link').style.display = 'none';
        } else {
          document.querySelector('#register-span').style.display = 'block';
          document.querySelector('#btn-register').removeAttribute('disabled');
          alert(response.error);
        }
      });

      document.getElementById('registerModal').addEventListener('show.bs.modal', () => {
        document.querySelector('.loading-spinner').style.display = 'none';
        document.getElementById('registerSuccess').style.display = 'none';
      });

      document.getElementById('loginModal').addEventListener('show.bs.modal', () => {
        document.getElementById('loginError').style.display = 'none';
      });

      // Toggle Cart Sidebar
      function toggleCartSidebar() {
        const cartSidebar = document.getElementById('cartSidebar');
        cartSidebar.classList.toggle('open');
      }

      // Load Cart Items into Sidebar
async function loadCartItems() {
  try {
    const response = await fetch('/api/carts/paginate');
    const data = await response.json();
    const carts = data.response;

    const cartSidebarBody = document.getElementById('cartSidebarBody');
    cartSidebarBody.innerHTML = '';

    if (carts.length === 0) {
      cartSidebarBody.innerHTML = '<p class="text-center">El carrito está vacío.</p>';
      return;
    }

    carts.forEach(cart => {
      const subtotal = cart.product_id.price * cart.quantity;

      const cartItem = document.createElement('div');
      cartItem.classList.add('d-flex', 'mb-3', 'p-2', 'border', 'rounded', 'bg-white', 'position-relative');
      cartItem.id = `cardMainLayout${cart._id}`;
      cartItem.innerHTML = `
        <button type="button" class="btn btn-outline-dark btn-sm position-absolute top-0 end-0 m-2" style="height: 35px; width: 35px; display: flex; align-items: center; justify-content: center;" onclick="destroyCartMainLayout('${cart._id}')">
          <span class="material-symbols-outlined" style="font-size: 16px;">delete</span>
        </button>
        <div class="d-flex align-items-start" style="width: 100%;">
          <div style="flex-shrink: 0; width: 80px;">
            <img src="${cart.product_id.photo}" class="img-fluid" alt="${cart.product_id.title}" style="width: 100%; height: 100%; object-fit: cover; border-radius: 5px;">
          </div>
          <div class="ms-2 flex-grow-1 d-flex flex-column justify-content-between">
            <div>
              <h5 class="card-title mb-1" style="font-size: 1rem;">${cart.product_id.title}</h5>
              <p class="card-text text-muted mb-1" style="font-size: 0.9rem;" id="productPrice${cart._id}">$${cart.product_id.price}</p>
            </div>
            <div class="d-flex align-items-center p-2 border rounded" style="background-color: #f5f5f5;">
              <button type="button" class="btn btn-outline-secondary btn-sm me-2" onclick="updateQuantityMainLayout(-1, '${cart._id}')">-</button>
              <span id="cantidadMainLayout${cart._id}" value="${cart.quantity}" class="border px-2 py-1 rounded">${cart.quantity}</span>
              <button type="button" class="btn btn-outline-secondary btn-sm ms-2" onclick="updateQuantityMainLayout(1, '${cart._id}')">+</button>
              <span class="ms-auto" style="font-size: 0.9rem;">Subtotal: $<span id="subtotal${cart._id}">${subtotal}</span></span>
            </div>
          </div>
        </div>
      `;
      cartSidebarBody.appendChild(cartItem);
    });
  } catch (error) {
    console.error('Error loading cart items:', error);
  }
}







      // Handle Cart Button Click
      function handleCartButtonClick(event) {
        if (window.innerWidth >= 992) {
          event.preventDefault();
          loadCartItems();
          toggleCartSidebar();
        }
      }
      function updateQuantityMainLayout(amount, cartId) {
        const cantidadElement = document.getElementById(`cantidadMainLayout${cartId}`);
        let currentQuantity = parseInt(cantidadElement.getAttribute('value'));
        console.log("current: ", currentQuantity)

        if (currentQuantity === 0 && amount === -1) {
          return;
        }

        if (currentQuantity === 1 && amount === -1) {
          console.log("logica de eliminacion de carrito")
          destroyCartMainLayout(cartId);
        } else {
          console.log("logica de actualizacion de carrito")
          updateCartMainLayout(cartId, currentQuantity + amount);

        }

        currentQuantity += amount;
        cantidadElement.setAttribute('value', currentQuantity);
        cantidadElement.textContent = currentQuantity;

        // Actualizar el subtotal
        updateSubtotalMainLayout(cartId, currentQuantity);
      }

      function updateSubtotalMainLayout(cartId, quantity) {
        const priceElement = document.getElementById(`productPrice${cartId}`);
        const price = parseFloat(priceElement.textContent.replace('$', ''));
        const subtotalElement = document.getElementById(`subtotal${cartId}`);
        const newSubtotal = price * quantity;
        subtotalElement.textContent = newSubtotal.toFixed(0);
      }

      const destroyCartMainLayout = async (cartId) => {
        try {
          console.log('Eliminando el carrito...');
          const response = await fetch(`/api/carts/${cartId}`, {
            method: 'DELETE',
          });
          const data = await response.json();
          console.log('Carrito eliminado:', data);
          //const cardElement = document.getElementById(`cardMainLayout${cartId}`);
          //cardElement.remove();
          loadCartItems()
        } catch (error) {
          console.error('Error al eliminar el carrito:', error);
        }
      };

      const updateCartMainLayout = async (cartId, newQuantity) => {
        try {
          console.log('Actualizando el carrito...');
          const response = await fetch(`/api/carts/${cartId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              quantity: newQuantity,
            }),
          });
          const data = await response.json();
          console.log('Carrito actualizado:', data);
        } catch (error) {
          console.error('Error al actualizar el carrito:', error);
        }
      };

      const destroyAllMainLayout = async () => {
        try {
          console.log('Eliminando todos los carritos...');
          const response = await fetch(`/api/carts/all`, {
            method: 'DELETE',
          });
          const data = await response.json();
          console.log('Carritos eliminados:', data);
          if (data.statusCode == 200) {
            loadCartItems()
          }
        } catch (error) {
          console.error('Error al eliminar los carritos:', error);
        }
      };
      
    </script>
  </body>
</html>

