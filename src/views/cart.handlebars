<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{title}}</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" 
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" 
    />
  </head>
  <body>
    <main>
      <h1 class="text-center" id="title">Carrito de compras</h1>
      <section class="d-flex flex-wrap justify-content-center align-items-center">
        {{#each carts}}
          <div class="card" id="card{{this._id}}">
            <img src="{{this.product_id.photo}}" class="card-img-top" alt="{{this.product_id.title}}">
            <div class="card-body">
              <h5 class="card-title text-center">{{this.product_id.title}}</h5>
              <p class="card-text text-end">${{this.product_id.price}}</p>
              <div class="d-flex align-items-center contenedor-botones-carrito">
                <div class="boton-eliminar">
                  <button type="button" onclick="destroyCart('{{this._id}}')">
                    <span class="material-symbols-outlined">delete</span>
                  </button>
                </div>
                <div class="botones-body">
                  <button type="button" class="btn boton" onclick="updateQuantity(-1, '{{this._id}}')">-</button>
                  <span id="cantidad{{this._id}}" value="{{this.quantity}}">{{this.quantity}}</span>
                  <button type="button" class="btn boton" onclick="updateQuantity(1, '{{this._id}}')">+</button>
                </div>
              </div>
            </div>
          </div>
        {{/each}}
      </section>
      <div class="text-center">
        <button type="button" class="btn btn-primary m-2">Finalizar compra</button>
        <button type="button" class="btn btn-danger m-2" onclick="destroyAll()">Cancelar compra</button>
      </div>
    </main>

    <script>
      function updateQuantity(amount, cartId) {
        const cantidadElement = document.getElementById(`cantidad${cartId}`);
        let currentQuantity = parseInt(cantidadElement.getAttribute('value'));
        console.log("current: ", currentQuantity)

        if (currentQuantity === 0 && amount === -1) {
          return;
        }

        if (currentQuantity === 1 && amount === -1) {
          console.log("logica de eliminacion de carrito")
          destroyCart(cartId);
        } else {
          console.log("logica de actualizacion de carrito")
          updateCart(cartId, currentQuantity + amount);
        }

        currentQuantity += amount;
        cantidadElement.setAttribute('value', currentQuantity);
        cantidadElement.textContent = currentQuantity;
      }

      const destroyCart = async (cartId) => {
        try {
          console.log('Eliminando el carrito...');
          const response = await fetch(`/api/carts/${cartId}`, {
            method: 'DELETE',
          });
          const data = await response.json();
          console.log('Carrito eliminado:', data);
          const cardElement = document.getElementById(`card${cartId}`);
          cardElement.remove();
        } catch (error) {
          console.error('Error al eliminar el carrito:', error);
        }
      };

      const updateCart = async (cartId, newQuantity) => {
        try {
          console.log('Actualizando el carrito...');
          const response = await fetch(`/api/carts/${cartId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              quantity: newQuantity,
            }),
          });
          const data = await response.json();
          console.log('Carrito actualizado:', data);
        } catch (error) {
          console.error('Error al actualizar el carrito:', error);
        }
      };

      const destroyAll = async () => {
        try {
          console.log('Eliminando todos los carritos...');
          const response = await fetch(`/api/carts/all`, {
            method: 'DELETE',
          });
          const data = await response.json();
          console.log('Carritos eliminados:', data);
          if (data.statusCode == 200) {
            const cardElements = document.querySelectorAll(".card");
            cardElements.forEach(cardElement => {
              cardElement.remove();
            });
          }
        } catch (error) {
          console.error('Error al eliminar los carritos:', error);
        }
      };
    </script>
  </body>
</html>

    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { min-height: 100vh; display: flex; flex-direction: column; background-color: #f8f9fa; }
      #title { 
        background-color: #FD9843; 
        color: white; 
        font-weight: bold; 
        padding: 10px 0; 
        text-shadow: 1px 1px 2px #000;
      }
      .card {
        width: 18rem;
        margin: 1rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
      }
      .card:hover {
        transform: scale(1.05);
      }
      .card-img-top {
        height: 200px;
        object-fit: cover;
      }
      .card-title {
        font-size: 1.25rem;
        font-weight: bold;
        color: #333;
      }
      .card-text {
        font-size: 1rem;
        color: #555;
      }
      .btn {
        border-radius: 50px;
        transition: background-color 0.3s;
      }
      .btn-secondary {
        background-color: #6c757d;
      }
      .btn-secondary:hover {
        background-color: #5a6268;
      }
      .btn-primary {
        background-color: #007bff;
      }
      .btn-primary:hover {
        background-color: #0056b3;
      }
      .btn-danger {
        background-color: #dc3545;
      }
      .btn-danger:hover {
        background-color: #c82333;
      }
      .contenedor-botones-carrito {
        justify-content: space-between;
        margin: 1rem 0;
      }
      .boton-eliminar button {
        color: white;
        background-color: transparent;
        border: none;
        font-size: 1.25rem;
      }
      .boton-eliminar button:hover {
        color: #dc3545;
      }
      .botones-body {
        background-color: #f1f1f1;
        border-radius: 0.5rem;
        display: flex;
        align-items: center;
        padding: 5px 2px;
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      .botones-body button {
        background-color: white;
        border: 2px solid #6c757d;
        color: #6c757d;
        width: 2.5rem;
        height: 2.5rem;
        font-size: 1.25rem;
        line-height: 1.25rem;
        text-align: center;
        padding: 0;
        border-radius: 0.5rem;
        margin: 0 2px;
      }
      .botones-body button:hover {
        background-color: #6c757d;
        color: white;
      }
      .botones-body span {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        min-width: 2rem;
        text-align: center;
      }
    </style>